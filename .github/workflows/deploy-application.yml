name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: compile CSS and Javascript
        run: |
          npm install
          npm run build

      - name: Configure PHP 8.3
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.3
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml

      - name: Install Composer dependencies
        run: composer install --no-dev --no-interaction --prefer-dist

      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{github.sha}}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

  prepare-release-on-server:
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-build
      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ vars.PATH }}/artifacts

      - name: Extract archive and create directiories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: $${{ github.sha }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA
          scripts: |
            mkdir -p "${{ vars.PATH }}/releases/${GITHUB_SHA}"
            tar xzf ${{ vars.PATH }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ vars.PATH }}/releases/${GITHUB_SHA}"

            rm -rf ${{ vars.PATH }}/releases/${GITHUB_SHA}/storage
            mkdir -p ${{ vars.PATH }}/storage/{app,public,framework,logs}
            mkdir -p ${{ vars.PATH }}/storage/framework/{cache,sessions,testing,views}
            chmod -R 0777 ${{ vars.PATH }}/storage
